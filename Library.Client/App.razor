@using Library.Client.Services;
@inject AuthService authService;

<CascadingValue Value="@context">
    <Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
</CascadingValue>

@code{
    private ContextData context { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        if (!String.IsNullOrEmpty(context.JwtToken))
        {
            var res = await authService.CheckAuthorization(context.JwtToken);

            if(res.Data != null)
            {
                context.JwtToken = res.Data.AccessToken;
                context.CurrentUser = res.Data.User;
                context.IsAuthorized = true;
            }
            else
            {
                context.IsAuthorized = false;
                context.JwtToken = null;
                context.CurrentUser = null;
            }
        }
        base.OnInitialized();
    }
}